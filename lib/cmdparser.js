const commandLineArgs = require('command-line-args');


// Here are the options. The jnode is going to be started using jamrun (a Python program).
// These options are going to be used by that program while starting the jnode.
// The jnode itself is embedded in the output generated by the jamc compiler.

// jnode --fog(-f)  --cloud(-c) --conf(-o)=filename.conf --debug(-d) --log(-l)=log.txt 
//       --registry(-r) --app(-a)=name --port(-p)=port_number


module.exports = function parseArgs() {

    const optdefs = [
        { name: 'fog', alias: 'f', type: Boolean},
        { name: 'cloud', alias: 'c', type: Boolean},
        { name: 'registry', alias: 'r', type: Boolean},
        { name: 'conf', alias: 'o', type: String, defaultValue: "./j.conf"},
        { name: 'app', alias: 'a', type: String},
        { name: 'log', alias: 'l', type: String},
        { name: 'port', alias: 'p', type: Number, defaultValue: 1883},
    ];

    // Catch exceptions..
    try {
        var options = commandLineArgs(optdefs)

        // Enforce some default parameters specifications
        if (options.app == undefined) {
            console.log("ERROR! App name should be specified");
            process.exit(1);
        } 
        // If fog or cloud is not specified, device is the default type 

    } catch(e) {
        console.log(e.name);
        // there was an error.. what is it?
        process.exit(1);
    }

    return options;
}